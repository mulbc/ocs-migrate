#  Input :
#    mig_dest_service_url : SSH Tunnel endpoint on destination
#    mig_source_data_location : Mount point on source side
#    mig_dest_data_location : Mount point on destination side
#    mig_source_host : IP address to connect to
#    mig_dest_ssh_private_key : SSH key to connect to destination
#
#  Output :
#    zero     :  if successful transfer
#    non-zero :  if unsuccessful transfer

- hosts: "{{ mig_source_host }}"
  vars:
    mig_dest_ssh_key_remote_location: "~/.ssh/dest"
  tasks:
  - name: "Ensure .ssh dir"
    file:
      path: "~/.ssh/"
      state: directory

  - name: "Copying private key to source"
    copy:
      src: "{{ mig_dest_ssh_private_key }}"
      dest: "{{ mig_dest_ssh_key_remote_location }}"
      mode: "0600"

  - name: "Running transfer"
    shell: "rsync --partial -aPvvcO {{ mig_source_data_location }} -e 'ssh -o StrictHostKeyChecking=no -i {{ mig_dest_ssh_key_remote_location }}' root@{{ mig_dest_service_url }}:{{ mig_dest_data_location }}"

  - name: "Removing private key from source"
    file:
      state: absent
      path: "{{ mig_dest_ssh_key_remote_location }}"
